{"ast":null,"code":"var _jsxFileName = \"/home/nicolaiev/Documentos/Proyectos/parkingmodeweb/src/components/Earth.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from \"react\";\nimport { useLoader, useFrame } from \"@react-three/fiber\";\nimport { TextureLoader } from \"three\";\nimport { OrbitControls, Stars } from \"@react-three/drei\";\nimport * as THREE from \"three\";\nimport EarthDayMap from \"../assets/img/4299.jpg\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction Earth(props) {\n  _s();\n\n  const [colorMap, normalMap, specularMap, cloudsMap] = useLoader(TextureLoader, [EarthDayMap]);\n  const earthRef = useRef();\n  const cloudsRef = useRef();\n  useFrame(({\n    clock\n  }) => {\n    const elapsedTime = clock.getElapsedTime();\n    earthRef.current.rotation.y = elapsedTime / 6;\n    cloudsRef.current.rotation.y = elapsedTime / 6;\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"pointLight\", {\n      color: \"#fff\",\n      position: [2, 0, 3],\n      intensity: 1.2\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Stars, {\n      radius: 300,\n      depth: 60,\n      count: 20000,\n      factor: 7,\n      saturation: 0,\n      fade: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: cloudsRef,\n      position: [0, 0, 3],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1.005, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        map: cloudsMap,\n        opacity: 0.1,\n        depthWrite: true,\n        transparent: true,\n        side: THREE.DoubleSide\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"mesh\", {\n      ref: earthRef,\n      position: [0, 0, 3],\n      children: [/*#__PURE__*/_jsxDEV(\"sphereGeometry\", {\n        args: [1, 32, 32]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshPhongMaterial\", {\n        specularMap: specularMap\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"meshStandardMaterial\", {\n        map: colorMap,\n        normalMap: normalMap,\n        metalness: 0.4,\n        roughness: 0.7\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(OrbitControls, {\n        enableZoom: true,\n        enablePan: true,\n        enableRotate: true,\n        zoomSpeed: 0.6,\n        panSpeed: 0.5,\n        rotateSpeed: 0.4\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Earth, \"snr6P+2T3l3OnY8H4vBVxgdrdEk=\", false, function () {\n  return [useLoader, useFrame];\n});\n\n_c = Earth;\nexport default Earth;\n\nvar _c;\n\n$RefreshReg$(_c, \"Earth\");","map":{"version":3,"sources":["/home/nicolaiev/Documentos/Proyectos/parkingmodeweb/src/components/Earth.js"],"names":["React","useRef","useLoader","useFrame","TextureLoader","OrbitControls","Stars","THREE","EarthDayMap","Earth","props","colorMap","normalMap","specularMap","cloudsMap","earthRef","cloudsRef","clock","elapsedTime","getElapsedTime","current","rotation","y","DoubleSide"],"mappings":"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","sourcesContent":["import React, { useRef } from \"react\";\nimport { useLoader, useFrame } from \"@react-three/fiber\";\nimport { TextureLoader } from \"three\";\nimport { OrbitControls, Stars } from \"@react-three/drei\";\nimport * as THREE from \"three\";\n\nimport EarthDayMap from \"../assets/img/4299.jpg\";\n\nfunction Earth(props) {\n\n    const [colorMap, normalMap, specularMap, cloudsMap] = useLoader(\n        TextureLoader,\n        [EarthDayMap]\n    );\n\n    const earthRef = useRef();\n    const cloudsRef = useRef();\n\n    useFrame(({ clock }) => {\n        const elapsedTime = clock.getElapsedTime();\n\n        earthRef.current.rotation.y = elapsedTime / 6;\n        cloudsRef.current.rotation.y = elapsedTime / 6;\n    });\n\n    return (\n        <>\n            {/* <ambientLight intensity={1} /> */}\n\n            {/* shadow */}\n            <pointLight\n                color=\"#fff\"\n                position={[2, 0, 3]}\n                intensity={1.2}\n            />\n            <Stars\n                radius={300}\n                depth={60}\n                count={20000}\n                factor={7}\n                saturation={0}\n                fade={true}\n            />\n            <mesh ref={cloudsRef} position={[0, 0, 3]}>\n                <sphereGeometry args={[1.005, 32, 32]} />\n                <meshPhongMaterial\n                    map={cloudsMap}\n                    opacity={0.1}\n                    depthWrite={true}\n                    transparent={true}\n                    side={THREE.DoubleSide}\n                />\n            </mesh>\n            <mesh ref={earthRef} position={[0, 0, 3]}>\n                <sphereGeometry args={[1, 32, 32]} />\n                <meshPhongMaterial specularMap={specularMap} />\n                <meshStandardMaterial\n                    map={colorMap}\n                    normalMap={normalMap}\n                    metalness={0.4}\n                    roughness={0.7}\n                />\n                <OrbitControls\n                    enableZoom={true}\n                    enablePan={true}\n                    enableRotate={true}\n                    zoomSpeed={0.6}\n                    panSpeed={0.5}\n                    rotateSpeed={0.4}\n                />\n            </mesh>\n        </>\n    );\n}\n\nexport default Earth;"]},"metadata":{},"sourceType":"module"}