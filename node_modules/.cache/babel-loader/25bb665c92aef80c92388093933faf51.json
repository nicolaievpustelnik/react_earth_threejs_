{"ast":null,"code":"var _jsxFileName = \"/home/nicolaiev/Documentos/Proyectos/parkingmodeweb/src/components/Header.js\";\n// import logo from './logo.svg';\nimport * as THREE from 'three'; // let scene, camera, renderer, cube;\n// function init() {\n//     //creating scene\n//     scene = new THREE.Scene();\n//     scene.background = new THREE.Color(0x2a3b4c);\n//     //add camera\n//     camera = new THREE.PerspectiveCamera(\n//         75,\n//         window.innerWidth / window.innerHeight\n//     );\n//     //renderer\n//     renderer = new THREE.WebGLRenderer();\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n//     document.body.appendChild(renderer.domElement);\n//     //add geometry\n//     var geometry = new THREE.BoxGeometry();\n//     var material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true });\n//     cube = new THREE.Mesh(geometry, material);\n//     scene.add(cube);\n//     camera.position.z = 5;\n//     animate();\n// }\n// //animation\n// function animate() {\n//     requestAnimationFrame(animate);\n//     cube.rotation.x += 0.01;\n//     cube.rotation.y += 0.01;\n//     renderer.render(scene, camera);\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(50, 500 / 400, 0.1, 1000);\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(500, 400);\ndocument.body.appendChild(renderer.domElement);\nvar geometry = new THREE.SphereGeometry(3, 50, 50, 0, Math.PI * 2, 0, Math.PI * 2);\nvar material = new THREE.MeshNormalMaterial();\nvar cube = new THREE.Mesh(geometry, material);\nscene.add(cube);\ncamera.position.z = 10;\n\nvar render = function () {\n  requestAnimationFrame(render);\n  cube.rotation.y += 0.01;\n  renderer.render(scene, camera);\n};\n\nrender();\n\nfunction Header() {\n  return /*#__PURE__*/_jsxDEV(\"header\", {\n    children: render()\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 9\n  }, this);\n}\n\n_c = Header;\nexport default Header;\n\nvar _c;\n\n$RefreshReg$(_c, \"Header\");","map":{"version":3,"sources":["/home/nicolaiev/Documentos/Proyectos/parkingmodeweb/src/components/Header.js"],"names":["THREE","scene","Scene","camera","PerspectiveCamera","renderer","WebGLRenderer","setSize","document","body","appendChild","domElement","geometry","SphereGeometry","Math","PI","material","MeshNormalMaterial","cube","Mesh","add","position","z","render","requestAnimationFrame","rotation","y","Header"],"mappings":";AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB,C,CAEA;AAEA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA;AAEA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AAEA;AAEA;;;AACA,IAAIC,KAAK,GAAG,IAAID,KAAK,CAACE,KAAV,EAAZ;AACA,IAAIC,MAAM,GAAG,IAAIH,KAAK,CAACI,iBAAV,CAA4B,EAA5B,EAAgC,MAAM,GAAtC,EAA2C,GAA3C,EAAgD,IAAhD,CAAb;AAEA,IAAIC,QAAQ,GAAG,IAAIL,KAAK,CAACM,aAAV,EAAf;AACAD,QAAQ,CAACE,OAAT,CAAiB,GAAjB,EAAsB,GAAtB;AACAC,QAAQ,CAACC,IAAT,CAAcC,WAAd,CAA0BL,QAAQ,CAACM,UAAnC;AAEA,IAAIC,QAAQ,GAAG,IAAIZ,KAAK,CAACa,cAAV,CAAyB,CAAzB,EAA4B,EAA5B,EAAgC,EAAhC,EAAoC,CAApC,EAAuCC,IAAI,CAACC,EAAL,GAAU,CAAjD,EAAoD,CAApD,EAAuDD,IAAI,CAACC,EAAL,GAAU,CAAjE,CAAf;AACA,IAAIC,QAAQ,GAAG,IAAIhB,KAAK,CAACiB,kBAAV,EAAf;AACA,IAAIC,IAAI,GAAG,IAAIlB,KAAK,CAACmB,IAAV,CAAeP,QAAf,EAAyBI,QAAzB,CAAX;AACAf,KAAK,CAACmB,GAAN,CAAUF,IAAV;AAGAf,MAAM,CAACkB,QAAP,CAAgBC,CAAhB,GAAoB,EAApB;;AACA,IAAIC,MAAM,GAAG,YAAY;AACrBC,EAAAA,qBAAqB,CAACD,MAAD,CAArB;AAEAL,EAAAA,IAAI,CAACO,QAAL,CAAcC,CAAd,IAAmB,IAAnB;AAEArB,EAAAA,QAAQ,CAACkB,MAAT,CAAgBtB,KAAhB,EAAuBE,MAAvB;AACH,CAND;;AAQAoB,MAAM;;AAGN,SAASI,MAAT,GAAkB;AACd,sBACI;AAAA,cACKJ,MAAM;AADX;AAAA;AAAA;AAAA;AAAA,UADJ;AAKH;;KANQI,M;AAQT,eAAeA,MAAf","sourcesContent":["// import logo from './logo.svg';\nimport * as THREE from 'three';\n\n// let scene, camera, renderer, cube;\n\n// function init() {\n\n//     //creating scene\n//     scene = new THREE.Scene();\n//     scene.background = new THREE.Color(0x2a3b4c);\n\n//     //add camera\n//     camera = new THREE.PerspectiveCamera(\n//         75,\n//         window.innerWidth / window.innerHeight\n//     );\n\n//     //renderer\n//     renderer = new THREE.WebGLRenderer();\n//     renderer.setSize(window.innerWidth, window.innerHeight);\n//     document.body.appendChild(renderer.domElement);\n\n//     //add geometry\n//     var geometry = new THREE.BoxGeometry();\n//     var material = new THREE.MeshBasicMaterial({ color: 0x00ff00, wireframe: true });\n//     cube = new THREE.Mesh(geometry, material);\n\n//     scene.add(cube);\n\n//     camera.position.z = 5;\n\n//     animate();\n// }\n\n// //animation\n// function animate() {\n//     requestAnimationFrame(animate);\n\n//     cube.rotation.x += 0.01;\n//     cube.rotation.y += 0.01;\n\n//     renderer.render(scene, camera);\n\n// }\nvar scene = new THREE.Scene();\nvar camera = new THREE.PerspectiveCamera(50, 500 / 400, 0.1, 1000);\n\nvar renderer = new THREE.WebGLRenderer();\nrenderer.setSize(500, 400);\ndocument.body.appendChild(renderer.domElement);\n\nvar geometry = new THREE.SphereGeometry(3, 50, 50, 0, Math.PI * 2, 0, Math.PI * 2);\nvar material = new THREE.MeshNormalMaterial();\nvar cube = new THREE.Mesh(geometry, material);\nscene.add(cube);\n\n\ncamera.position.z = 10;\nvar render = function () {\n    requestAnimationFrame(render);\n\n    cube.rotation.y += 0.01;\n\n    renderer.render(scene, camera);\n};\n\nrender();\n\n\nfunction Header() {\n    return (\n        <header>\n            {render()}\n        </header >\n    );\n}\n\nexport default Header;\n\n\n"]},"metadata":{},"sourceType":"module"}