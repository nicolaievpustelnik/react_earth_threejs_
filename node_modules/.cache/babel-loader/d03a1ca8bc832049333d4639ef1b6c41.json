{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useFrame, extend } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { Position } from '../helpers/Position.js';\nconst context = /*#__PURE__*/React.createContext(null);\nconst m = new THREE.Matrix4();\nconst c = new THREE.Color();\nlet i;\n\nfunction Instances({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const matrices = [...new Array(limit * 16)].map(() => 0);\n    const colors = [...new Array(limit * 3)].map(() => 1);\n    return [new Float32Array(matrices), new Float32Array(colors)];\n  });\n  React.useLayoutEffect(() => {\n    ref.current.count = ref.current.instanceMatrix.updateRange.count = ref.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n  }, [refs, range]);\n  useFrame(() => {\n    for (i = 0; i < refs.length; i++) {\n      refs[i].current.updateMatrix();\n      refs[i].current.matrixWorldNeedsUpdate = false;\n\n      if (!refs[i].current.matrixWorld.equals(m.fromArray(matrices, i * 16))) {\n        refs[i].current.matrixWorld.toArray(matrices, i * 16);\n        ref.current.instanceMatrix.needsUpdate = true;\n      }\n\n      if (!refs[i].current.color.equals(c.fromArray(colors, i * 3))) {\n        refs[i].current.color.toArray(colors, i * 3);\n        ref.current.instanceColor.needsUpdate = true;\n      }\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < refs.length; i++) {\n      var _refs$i$current;\n\n      Object.assign(events, (_refs$i$current = refs[i].current) == null ? void 0 : _refs$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: e => {\n        var _refs$e$instanceId$cu, _refs$e$instanceId$cu2, _refs$e$instanceId$cu3;\n\n        return (_refs$e$instanceId$cu = refs[e.instanceId].current) == null ? void 0 : (_refs$e$instanceId$cu2 = _refs$e$instanceId$cu.__r3f) == null ? void 0 : (_refs$e$instanceId$cu3 = _refs$e$instanceId$cu2.handlers) == null ? void 0 : _refs$e$instanceId$cu3[key](e);\n      }\n    }), {});\n  }, [refs]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    ref: ref,\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3\n  }), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nexport { Instance, Instances };","map":{"version":3,"sources":["/home/nicolaiev/Documents/Projects/react_earth_threejs_/node_modules/@react-three/drei/core/Instances.js"],"names":["_extends","THREE","React","useFrame","extend","mergeRefs","Position","context","createContext","m","Matrix4","c","Color","i","Instances","children","range","limit","props","ref","useRef","refs","setRefs","useState","matrices","colors","Array","map","Float32Array","useLayoutEffect","current","count","instanceMatrix","updateRange","instanceColor","Math","min","undefined","length","updateMatrix","matrixWorldNeedsUpdate","matrixWorld","equals","fromArray","toArray","needsUpdate","color","events","useMemo","_refs$i$current","Object","assign","__r3f","handlers","keys","reduce","prev","key","e","_refs$e$instanceId$cu","_refs$e$instanceId$cu2","_refs$e$instanceId$cu3","instanceId","api","subscribe","filter","item","createElement","args","attach","array","itemSize","Provider","value","Instance","forwardRef","group","useContext","matrixAutoUpdate"],"mappings":"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","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useFrame, extend } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { Position } from '../helpers/Position.js';\n\nconst context = /*#__PURE__*/React.createContext(null);\nconst m = new THREE.Matrix4();\nconst c = new THREE.Color();\nlet i;\n\nfunction Instances({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[matrices, colors]] = React.useState(() => {\n    const matrices = [...new Array(limit * 16)].map(() => 0);\n    const colors = [...new Array(limit * 3)].map(() => 1);\n    return [new Float32Array(matrices), new Float32Array(colors)];\n  });\n  React.useLayoutEffect(() => {\n    ref.current.count = ref.current.instanceMatrix.updateRange.count = ref.current.instanceColor.updateRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length);\n  }, [refs, range]);\n  useFrame(() => {\n    for (i = 0; i < refs.length; i++) {\n      refs[i].current.updateMatrix();\n      refs[i].current.matrixWorldNeedsUpdate = false;\n\n      if (!refs[i].current.matrixWorld.equals(m.fromArray(matrices, i * 16))) {\n        refs[i].current.matrixWorld.toArray(matrices, i * 16);\n        ref.current.instanceMatrix.needsUpdate = true;\n      }\n\n      if (!refs[i].current.color.equals(c.fromArray(colors, i * 3))) {\n        refs[i].current.color.toArray(colors, i * 3);\n        ref.current.instanceColor.needsUpdate = true;\n      }\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < refs.length; i++) {\n      var _refs$i$current;\n\n      Object.assign(events, (_refs$i$current = refs[i].current) == null ? void 0 : _refs$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: e => {\n        var _refs$e$instanceId$cu, _refs$e$instanceId$cu2, _refs$e$instanceId$cu3;\n\n        return (_refs$e$instanceId$cu = refs[e.instanceId].current) == null ? void 0 : (_refs$e$instanceId$cu2 = _refs$e$instanceId$cu.__r3f) == null ? void 0 : (_refs$e$instanceId$cu3 = _refs$e$instanceId$cu2.handlers) == null ? void 0 : _refs$e$instanceId$cu3[key](e);\n      }\n    }), {});\n  }, [refs]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"instancedMesh\", _extends({\n    ref: ref,\n    args: [null, null, 0]\n  }, events, props), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceMatrix\",\n    count: matrices.length / 16,\n    array: matrices,\n    itemSize: 16\n  }), /*#__PURE__*/React.createElement(\"instancedBufferAttribute\", {\n    attach: \"instanceColor\",\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3\n  }), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nconst Instance = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\n\nexport { Instance, Instances };\n"]},"metadata":{},"sourceType":"module"}