{"ast":null,"code":"import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useFrame, extend } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { Position } from '../helpers/Position.js';\nconst context = /*#__PURE__*/React.createContext(null);\nconst v = new THREE.Vector3();\nconst c = new THREE.Color();\nlet i;\n\nfunction Points({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors]] = React.useState(() => {\n    const positions = [...new Array(limit * 3)].map(() => 0);\n    const colors = [...new Array(limit * 3)].map(() => 1);\n    return [new Float32Array(positions), new Float32Array(colors)];\n  });\n  React.useLayoutEffect(() => void (ref.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length)), [refs, range]);\n  useFrame(() => {\n    for (i = 0; i < refs.length; i++) {\n      refs[i].current.updateMatrix();\n      refs[i].current.matrixWorldNeedsUpdate = false;\n      refs[i].current.getWorldPosition(v);\n\n      if (v.x !== positions[i * 3] || v.y !== positions[i * 3 + 1] || v.z !== positions[i * 3 + 2]) {\n        v.toArray(positions, i * 3);\n        ref.current.geometry.attributes.position.needsUpdate = true;\n      }\n\n      if (!refs[i].current.color.equals(c.fromArray(colors, i * 3))) {\n        refs[i].current.color.toArray(colors, i * 3);\n        ref.current.geometry.attributes.color.needsUpdate = true;\n      }\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < refs.length; i++) {\n      var _refs$i$current;\n\n      Object.assign(events, (_refs$i$current = refs[i].current) == null ? void 0 : _refs$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: e => {\n        var _refs$e$index$current, _refs$e$index$current2, _refs$e$index$current3;\n\n        return (_refs$e$index$current = refs[e.index].current) == null ? void 0 : (_refs$e$index$current2 = _refs$e$index$current.__r3f) == null ? void 0 : (_refs$e$index$current3 = _refs$e$index$current2.handlers) == null ? void 0 : _refs$e$index$current3[key](e);\n      }\n    }), {});\n  }, [refs]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: ref\n  }, events, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'position'],\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nconst Point = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\nexport { Point, Points };","map":{"version":3,"sources":["/home/nicolaiev/Documents/Projects/react_earth_threejs_/node_modules/@react-three/drei/core/Points.js"],"names":["_extends","THREE","React","useFrame","extend","mergeRefs","Position","context","createContext","v","Vector3","c","Color","i","Points","children","range","limit","props","ref","useRef","refs","setRefs","useState","positions","colors","Array","map","Float32Array","useLayoutEffect","current","geometry","drawRange","count","Math","min","undefined","length","updateMatrix","matrixWorldNeedsUpdate","getWorldPosition","x","y","z","toArray","attributes","position","needsUpdate","color","equals","fromArray","events","useMemo","_refs$i$current","Object","assign","__r3f","handlers","keys","reduce","prev","key","e","_refs$e$index$current","_refs$e$index$current2","_refs$e$index$current3","index","api","subscribe","filter","item","createElement","attachObject","array","itemSize","Provider","value","Point","forwardRef","group","useContext","matrixAutoUpdate"],"mappings":"AAAA,OAAOA,QAAP,MAAqB,oCAArB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,QAAT,EAAmBC,MAAnB,QAAiC,oBAAjC;AACA,OAAOC,SAAP,MAAsB,kBAAtB;AACA,SAASC,QAAT,QAAyB,wBAAzB;AAEA,MAAMC,OAAO,GAAG,aAAaL,KAAK,CAACM,aAAN,CAAoB,IAApB,CAA7B;AACA,MAAMC,CAAC,GAAG,IAAIR,KAAK,CAACS,OAAV,EAAV;AACA,MAAMC,CAAC,GAAG,IAAIV,KAAK,CAACW,KAAV,EAAV;AACA,IAAIC,CAAJ;;AAEA,SAASC,MAAT,CAAgB;AACdC,EAAAA,QADc;AAEdC,EAAAA,KAFc;AAGdC,EAAAA,KAAK,GAAG,IAHM;AAId,KAAGC;AAJW,CAAhB,EAKG;AACD,QAAMC,GAAG,GAAGjB,KAAK,CAACkB,MAAN,CAAa,IAAb,CAAZ;AACA,QAAM,CAACC,IAAD,EAAOC,OAAP,IAAkBpB,KAAK,CAACqB,QAAN,CAAe,EAAf,CAAxB;AACA,QAAM,CAAC,CAACC,SAAD,EAAYC,MAAZ,CAAD,IAAwBvB,KAAK,CAACqB,QAAN,CAAe,MAAM;AACjD,UAAMC,SAAS,GAAG,CAAC,GAAG,IAAIE,KAAJ,CAAUT,KAAK,GAAG,CAAlB,CAAJ,EAA0BU,GAA1B,CAA8B,MAAM,CAApC,CAAlB;AACA,UAAMF,MAAM,GAAG,CAAC,GAAG,IAAIC,KAAJ,CAAUT,KAAK,GAAG,CAAlB,CAAJ,EAA0BU,GAA1B,CAA8B,MAAM,CAApC,CAAf;AACA,WAAO,CAAC,IAAIC,YAAJ,CAAiBJ,SAAjB,CAAD,EAA8B,IAAII,YAAJ,CAAiBH,MAAjB,CAA9B,CAAP;AACD,GAJ6B,CAA9B;AAKAvB,EAAAA,KAAK,CAAC2B,eAAN,CAAsB,MAAM,MAAMV,GAAG,CAACW,OAAJ,CAAYC,QAAZ,CAAqBC,SAArB,CAA+BC,KAA/B,GAAuCC,IAAI,CAACC,GAAL,CAASlB,KAAT,EAAgBD,KAAK,KAAKoB,SAAV,GAAsBpB,KAAtB,GAA8BC,KAA9C,EAAqDI,IAAI,CAACgB,MAA1D,CAA7C,CAA5B,EAA6I,CAAChB,IAAD,EAAOL,KAAP,CAA7I;AACAb,EAAAA,QAAQ,CAAC,MAAM;AACb,SAAKU,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGQ,IAAI,CAACgB,MAArB,EAA6BxB,CAAC,EAA9B,EAAkC;AAChCQ,MAAAA,IAAI,CAACR,CAAD,CAAJ,CAAQiB,OAAR,CAAgBQ,YAAhB;AACAjB,MAAAA,IAAI,CAACR,CAAD,CAAJ,CAAQiB,OAAR,CAAgBS,sBAAhB,GAAyC,KAAzC;AACAlB,MAAAA,IAAI,CAACR,CAAD,CAAJ,CAAQiB,OAAR,CAAgBU,gBAAhB,CAAiC/B,CAAjC;;AAEA,UAAIA,CAAC,CAACgC,CAAF,KAAQjB,SAAS,CAACX,CAAC,GAAG,CAAL,CAAjB,IAA4BJ,CAAC,CAACiC,CAAF,KAAQlB,SAAS,CAACX,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAA7C,IAA4DJ,CAAC,CAACkC,CAAF,KAAQnB,SAAS,CAACX,CAAC,GAAG,CAAJ,GAAQ,CAAT,CAAjF,EAA8F;AAC5FJ,QAAAA,CAAC,CAACmC,OAAF,CAAUpB,SAAV,EAAqBX,CAAC,GAAG,CAAzB;AACAM,QAAAA,GAAG,CAACW,OAAJ,CAAYC,QAAZ,CAAqBc,UAArB,CAAgCC,QAAhC,CAAyCC,WAAzC,GAAuD,IAAvD;AACD;;AAED,UAAI,CAAC1B,IAAI,CAACR,CAAD,CAAJ,CAAQiB,OAAR,CAAgBkB,KAAhB,CAAsBC,MAAtB,CAA6BtC,CAAC,CAACuC,SAAF,CAAYzB,MAAZ,EAAoBZ,CAAC,GAAG,CAAxB,CAA7B,CAAL,EAA+D;AAC7DQ,QAAAA,IAAI,CAACR,CAAD,CAAJ,CAAQiB,OAAR,CAAgBkB,KAAhB,CAAsBJ,OAAtB,CAA8BnB,MAA9B,EAAsCZ,CAAC,GAAG,CAA1C;AACAM,QAAAA,GAAG,CAACW,OAAJ,CAAYC,QAAZ,CAAqBc,UAArB,CAAgCG,KAAhC,CAAsCD,WAAtC,GAAoD,IAApD;AACD;AACF;AACF,GAhBO,CAAR;AAiBA,QAAMI,MAAM,GAAGjD,KAAK,CAACkD,OAAN,CAAc,MAAM;AACjC,UAAMD,MAAM,GAAG,EAAf;;AAEA,SAAKtC,CAAC,GAAG,CAAT,EAAYA,CAAC,GAAGQ,IAAI,CAACgB,MAArB,EAA6BxB,CAAC,EAA9B,EAAkC;AAChC,UAAIwC,eAAJ;;AAEAC,MAAAA,MAAM,CAACC,MAAP,CAAcJ,MAAd,EAAsB,CAACE,eAAe,GAAGhC,IAAI,CAACR,CAAD,CAAJ,CAAQiB,OAA3B,KAAuC,IAAvC,GAA8C,KAAK,CAAnD,GAAuDuB,eAAe,CAACG,KAAhB,CAAsBC,QAAnG;AACD;;AAED,WAAOH,MAAM,CAACI,IAAP,CAAYP,MAAZ,EAAoBQ,MAApB,CAA2B,CAACC,IAAD,EAAOC,GAAP,MAAgB,EAAE,GAAGD,IAAL;AAChD,OAACC,GAAD,GAAOC,CAAC,IAAI;AACV,YAAIC,qBAAJ,EAA2BC,sBAA3B,EAAmDC,sBAAnD;;AAEA,eAAO,CAACF,qBAAqB,GAAG1C,IAAI,CAACyC,CAAC,CAACI,KAAH,CAAJ,CAAcpC,OAAvC,KAAmD,IAAnD,GAA0D,KAAK,CAA/D,GAAmE,CAACkC,sBAAsB,GAAGD,qBAAqB,CAACP,KAAhD,KAA0D,IAA1D,GAAiE,KAAK,CAAtE,GAA0E,CAACS,sBAAsB,GAAGD,sBAAsB,CAACP,QAAjD,KAA8D,IAA9D,GAAqE,KAAK,CAA1E,GAA8EQ,sBAAsB,CAACJ,GAAD,CAAtB,CAA4BC,CAA5B,CAAlO;AACD;AAL+C,KAAhB,CAA3B,EAMH,EANG,CAAP;AAOD,GAhBc,EAgBZ,CAACzC,IAAD,CAhBY,CAAf;AAiBA,QAAM8C,GAAG,GAAGjE,KAAK,CAACkD,OAAN,CAAc,OAAO;AAC/BgB,IAAAA,SAAS,EAAEjD,GAAG,IAAI;AAChBG,MAAAA,OAAO,CAACD,IAAI,IAAI,CAAC,GAAGA,IAAJ,EAAUF,GAAV,CAAT,CAAP;AACA,aAAO,MAAMG,OAAO,CAACD,IAAI,IAAIA,IAAI,CAACgD,MAAL,CAAYC,IAAI,IAAIA,IAAI,CAACxC,OAAL,KAAiBX,GAAG,CAACW,OAAzC,CAAT,CAApB;AACD;AAJ8B,GAAP,CAAd,EAKR,EALQ,CAAZ;AAMA,SAAO,aAAa5B,KAAK,CAACqE,aAAN,CAAoB,QAApB,EAA8BvE,QAAQ,CAAC;AACzDmB,IAAAA,GAAG,EAAEA;AADoD,GAAD,EAEvDgC,MAFuD,EAE/CjC,KAF+C,CAAtC,EAED,aAAahB,KAAK,CAACqE,aAAN,CAAoB,gBAApB,EAAsC,IAAtC,EAA4C,aAAarE,KAAK,CAACqE,aAAN,CAAoB,iBAApB,EAAuC;AAC9HC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,UAAf,CADgH;AAE9HvC,IAAAA,KAAK,EAAET,SAAS,CAACa,MAAV,GAAmB,CAFoG;AAG9HoC,IAAAA,KAAK,EAAEjD,SAHuH;AAI9HkD,IAAAA,QAAQ,EAAE;AAJoH,GAAvC,CAAzD,EAK5B,aAAaxE,KAAK,CAACqE,aAAN,CAAoB,iBAApB,EAAuC;AACtDC,IAAAA,YAAY,EAAE,CAAC,YAAD,EAAe,OAAf,CADwC;AAEtDvC,IAAAA,KAAK,EAAER,MAAM,CAACY,MAAP,GAAgB,CAF+B;AAGtDoC,IAAAA,KAAK,EAAEhD,MAH+C;AAItDiD,IAAAA,QAAQ,EAAE;AAJ4C,GAAvC,CALe,CAFZ,EAYf,aAAaxE,KAAK,CAACqE,aAAN,CAAoBhE,OAAO,CAACoE,QAA5B,EAAsC;AACtDC,IAAAA,KAAK,EAAET;AAD+C,GAAtC,EAEfpD,QAFe,CAZE,CAApB;AAeD;;AAED,MAAM8D,KAAK,GAAG,aAAa3E,KAAK,CAAC4E,UAAN,CAAiB,CAAC;AAC3C/D,EAAAA,QAD2C;AAE3C,KAAGG;AAFwC,CAAD,EAGzCC,GAHyC,KAGjC;AACTjB,EAAAA,KAAK,CAACkD,OAAN,CAAc,MAAMhD,MAAM,CAAC;AACzBE,IAAAA;AADyB,GAAD,CAA1B,EAEI,EAFJ;AAGA,QAAMyE,KAAK,GAAG7E,KAAK,CAACkB,MAAN,EAAd;AACA,QAAM;AACJgD,IAAAA;AADI,MAEFlE,KAAK,CAAC8E,UAAN,CAAiBzE,OAAjB,CAFJ;AAGAL,EAAAA,KAAK,CAAC2B,eAAN,CAAsB,MAAMuC,SAAS,CAACW,KAAD,CAArC,EAA8C,EAA9C;AACA,SAAO,aAAa7E,KAAK,CAACqE,aAAN,CAAoB,UAApB,EAAgCvE,QAAQ,CAAC;AAC3DiF,IAAAA,gBAAgB,EAAE,KADyC;AAE3D9D,IAAAA,GAAG,EAAEd,SAAS,CAAC,CAACc,GAAD,EAAM4D,KAAN,CAAD;AAF6C,GAAD,EAGzD7D,KAHyD,CAAxC,EAGTH,QAHS,CAApB;AAID,CAhB0B,CAA3B;AAkBA,SAAS8D,KAAT,EAAgB/D,MAAhB","sourcesContent":["import _extends from '@babel/runtime/helpers/esm/extends';\nimport * as THREE from 'three';\nimport * as React from 'react';\nimport { useFrame, extend } from '@react-three/fiber';\nimport mergeRefs from 'react-merge-refs';\nimport { Position } from '../helpers/Position.js';\n\nconst context = /*#__PURE__*/React.createContext(null);\nconst v = new THREE.Vector3();\nconst c = new THREE.Color();\nlet i;\n\nfunction Points({\n  children,\n  range,\n  limit = 1000,\n  ...props\n}) {\n  const ref = React.useRef(null);\n  const [refs, setRefs] = React.useState([]);\n  const [[positions, colors]] = React.useState(() => {\n    const positions = [...new Array(limit * 3)].map(() => 0);\n    const colors = [...new Array(limit * 3)].map(() => 1);\n    return [new Float32Array(positions), new Float32Array(colors)];\n  });\n  React.useLayoutEffect(() => void (ref.current.geometry.drawRange.count = Math.min(limit, range !== undefined ? range : limit, refs.length)), [refs, range]);\n  useFrame(() => {\n    for (i = 0; i < refs.length; i++) {\n      refs[i].current.updateMatrix();\n      refs[i].current.matrixWorldNeedsUpdate = false;\n      refs[i].current.getWorldPosition(v);\n\n      if (v.x !== positions[i * 3] || v.y !== positions[i * 3 + 1] || v.z !== positions[i * 3 + 2]) {\n        v.toArray(positions, i * 3);\n        ref.current.geometry.attributes.position.needsUpdate = true;\n      }\n\n      if (!refs[i].current.color.equals(c.fromArray(colors, i * 3))) {\n        refs[i].current.color.toArray(colors, i * 3);\n        ref.current.geometry.attributes.color.needsUpdate = true;\n      }\n    }\n  });\n  const events = React.useMemo(() => {\n    const events = {};\n\n    for (i = 0; i < refs.length; i++) {\n      var _refs$i$current;\n\n      Object.assign(events, (_refs$i$current = refs[i].current) == null ? void 0 : _refs$i$current.__r3f.handlers);\n    }\n\n    return Object.keys(events).reduce((prev, key) => ({ ...prev,\n      [key]: e => {\n        var _refs$e$index$current, _refs$e$index$current2, _refs$e$index$current3;\n\n        return (_refs$e$index$current = refs[e.index].current) == null ? void 0 : (_refs$e$index$current2 = _refs$e$index$current.__r3f) == null ? void 0 : (_refs$e$index$current3 = _refs$e$index$current2.handlers) == null ? void 0 : _refs$e$index$current3[key](e);\n      }\n    }), {});\n  }, [refs]);\n  const api = React.useMemo(() => ({\n    subscribe: ref => {\n      setRefs(refs => [...refs, ref]);\n      return () => setRefs(refs => refs.filter(item => item.current !== ref.current));\n    }\n  }), []);\n  return /*#__PURE__*/React.createElement(\"points\", _extends({\n    ref: ref\n  }, events, props), /*#__PURE__*/React.createElement(\"bufferGeometry\", null, /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'position'],\n    count: positions.length / 3,\n    array: positions,\n    itemSize: 3\n  }), /*#__PURE__*/React.createElement(\"bufferAttribute\", {\n    attachObject: ['attributes', 'color'],\n    count: colors.length / 3,\n    array: colors,\n    itemSize: 3\n  })), /*#__PURE__*/React.createElement(context.Provider, {\n    value: api\n  }, children));\n}\n\nconst Point = /*#__PURE__*/React.forwardRef(({\n  children,\n  ...props\n}, ref) => {\n  React.useMemo(() => extend({\n    Position\n  }), []);\n  const group = React.useRef();\n  const {\n    subscribe\n  } = React.useContext(context);\n  React.useLayoutEffect(() => subscribe(group), []);\n  return /*#__PURE__*/React.createElement(\"position\", _extends({\n    matrixAutoUpdate: false,\n    ref: mergeRefs([ref, group])\n  }, props), children);\n});\n\nexport { Point, Points };\n"]},"metadata":{},"sourceType":"module"}